# This file is part of CPAchecker,
# a tool for configurable software verification:
# https://cpachecker.sosy-lab.org
# 
# SPDX-FileCopyrightText: 2007-2020 Dirk Beyer <https://www.sosy-lab.org>
# 
# SPDX-License-Identifier: Apache-2.0

# disable bounding assertions (default is enabled)
# bmc.boundingAssertions = false

# The rest of the options should not be changed.

# best traversal order for formula creation
analysis.traversal.order = bfs
analysis.traversal.useReversePostorder = true
analysis.traversal.useCallstack = true
analysis.traversal.useReverseLoopstack = true
analysis.traversal.useReverseLoopIterationCount = true

analysis.algorithm.BMC = true

# ARGCPA is needed in order to create an error path for unsafe programs
cpa = cpa.arg.ARGCPA
ARGCPA.cpa = cpa.composite.CompositeCPA

CompositeCPA.cpas = cpa.location.LocationCPA, cpa.predicate.PredicateCPA, cpa.assumptions.storage.AssumptionStorageCPA, cpa.loopbound.LoopBoundCPA

# No caching, the formulas are never created twice
cpa.predicate.blk.useCache = false

# No abstractions
cpa.predicate.blk.alwaysAtFunctions = false
cpa.predicate.blk.alwaysAtLoops     = false

# Do not dump stuff that is not meaningful when using BMC.
cpa.predicate.predmap.export = false
cpa.predicate.invariants.export = false
cpa.predicate.invariants.exportAsPrecision = false

# Ignore target states during formula creation
cpa.automaton.breakOnTargetState = 0

# TA specific config
# ---------------------

language = CTA

# BMC config
cpa.predicate.handlePointerAliasing = false
analysis.initialStatesFor = FUNCTION_ENTRIES

# Disable unsupported outputs
cfa.export = true
cfa.exportPerFunction = false
cfa.callgraph.export = false
cpa.arg.export = false
counterexample.export.enabled = false
cpa.arg.export.code.header=false
cpa.arg.export.code.addAssumptions = false