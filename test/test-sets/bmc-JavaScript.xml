<?xml version="1.0"?>
<!DOCTYPE benchmark PUBLIC "+//IDN sosy-lab.org//DTD BenchExec benchmark 1.0//EN"
        "http://www.sosy-lab.org/benchexec/benchmark-1.0.dtd">
<benchmark tool="cpachecker" timelimit="900 s" hardtimelimit="1000 s" memlimit="4000 MB" cpuCores="2">

    <option name="-noout"/>
    <option name="-heap">150M</option>
    <option name="-setprop">cpa.predicate.js.maxFieldNameCount=20</option>

    <rundefinition>
        <option name="-bmc-JavaScript"/>
    </rundefinition>

    <tasks>
        <option name="-setprop">solver.solver=z3</option>
        <include>../programs/javascript/*.yml</include>
        <include>../programs/javascript/*/*.yml</include>
        <include>../programs/javascript/*/*/*.yml</include>

        <exclude>../programs/javascript/expressions/binary-expressions/*.yml</exclude>
        <excludesfile>predicateAnalysis-JavaScript-encodeFloatAsRational.set</excludesfile>
        <propertyfile>../../test/config/specification/JavaScriptAssertion.spc</propertyfile>
    </tasks>

    <tasks>
        <include>../programs/javascript/expressions/binary-expressions/*.yml</include>
        <propertyfile>../../test/config/specification/JavaScriptAssertion.spc</propertyfile>
    </tasks>

    <tasks>
        <option name="-setprop">solver.solver=z3</option>
        <option name="-setprop">cpa.predicate.encodeFloatAs=rational</option>
        <!-- TODO this option should be removed as soon as NaN and float interpolation can be used together -->
        <option name="-setprop">cpa.predicate.js.useNaN=false</option>
        <exclude>../programs/javascript/expressions/binary-expressions/*.yml</exclude>
        <includesfile>predicateAnalysis-JavaScript-encodeFloatAsRational.set</includesfile>
        <propertyfile>../../test/config/specification/JavaScriptAssertion.spc</propertyfile>
    </tasks>
</benchmark>
