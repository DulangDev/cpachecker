<?xml version="1.0"?>
<!DOCTYPE benchmark PUBLIC "+//IDN sosy-lab.org//DTD BenchExec benchmark 1.0//EN" "http://www.sosy-lab.org/benchexec/benchmark-1.0.dtd">
<benchmark tool="cpachecker" timelimit="90 s" hardtimelimit="100 s" memlimit="7 GB" cpuCores="2">

  <option name="-benchmark" />
  <option name="-heap">5000M</option>

  <rundefinition name="pa">
		<option name="-predicateAnalysis"/>
		<option name="-setprop">cpa.predicate.handlePointerAliasing=false</option>
		<option name="-setprop">analysis.traversal.order=DFS</option>
    <!-- deactivated for better tables, as long as BW-analysis does not work with "-spec".
    <propertyfile>../programs/benchmarks/properties/unreach-call.prp</propertyfile>
    -->
  </rundefinition>
  <rundefinition name="pa-backwards">
    <option name="-predicateAnalysis-backwards"/>
		<option name="-setprop">cpa.predicate.handlePointerAliasing=false</option>
		<option name="-setprop">analysis.traversal.order=DFS</option>
  </rundefinition>

	<propertyfile>../programs/benchmarks/properties/unreach-call.prp</propertyfile>

  <columns>
    <column title="#reached">Size of reached set</column>
  </columns>

 <!-- kann predicate nicht
  <tasks name="Concurrency">
    <includesfile>../programs/benchmarks/ConcurrencySafety-Main.set</includesfile>
	</tasks>-->
 <!-- geht nicht ohne pointer support
  <tasks name="ReachSafety-ArraysReach">
    <includesfile>../programs/benchmarks/ReachSafety-Arrays.set</includesfile>
	</tasks> -->
  <tasks name="ReachSafety-BitVectorsReach">
		<!-- aehnlich zum controlflow -->
    <includesfile>../programs/benchmarks/ReachSafety-BitVectors.set</includesfile>
  </tasks>
  <tasks name="ReachSafety-ControlFlow">
    <includesfile>../programs/benchmarks/ReachSafety-ControlFlow.set</includesfile>
  </tasks>
  <tasks name="ReachSafety-ECA">
    <includesfile>../programs/benchmarks/ReachSafety-ECA.set</includesfile>
	</tasks>
	<!-- spezialfaelle
  <tasks name="ReachSafety-Floats">
		einfach, aber komplizierter
    <includesfile>../programs/benchmarks/ReachSafety-Floats.set</includesfile>
	</tasks> -->
  <tasks name="ReachSafety-HeapReach">
		<!-- mit mehr array und pointer (aber einfache)-->
    <includesfile>../programs/benchmarks/ReachSafety-Heap.set</includesfile>
  </tasks>
  <tasks name="ReachSafety-Loops">
    <includesfile>../programs/benchmarks/ReachSafety-Loops.set</includesfile>
  </tasks>
  <tasks name="ReachSafety-ProductLines">
		<!-- wenig pointer, aber viel branches -->
    <includesfile>../programs/benchmarks/ReachSafety-ProductLines.set</includesfile>
	</tasks>

	<!-- geht nicht ohne zusatzkonfiguration bam
  <tasks name="ReachSafety-Recursive">
    <includesfile>../programs/benchmarks/ReachSafety-Recursive.set</includesfile>
	</tasks> -->

  <!-- mach auch nicht sinn ohne pointer
  <tasks name="ReachSafety-Sequentialized">
    <includesfile>../programs/benchmarks/ReachSafety-Sequentialized.set</includesfile>
	</tasks>
 -->
	<!-- macht keinen sinn ohne pointer
  <tasks name="Systems_DeviceDriversLinux64_ReachSafety">
		vll besser bw, aber viele pointer und structs 
    <includesfile>../programs/benchmarks/Systems_DeviceDriversLinux64_ReachSafety.set</includesfile>
    <option name="-64"/>
	</tasks> -->
</benchmark>
