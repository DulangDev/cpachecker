MODULE Chain
{
  INPUT
    l:    SYNC;
    r:    SYNC;
    fin:  SYNC;
  LOCAL
    x:  CLOCK;
  INITIAL s_0;
  AUTOMATON automaton
  {
    STATE s_0 { TRANS { SYNC l; RESET x; GOTO s_1; } }
    STATE s_1 { TRANS { GUARD x >= 4; SYNC r; GOTO s_2; } }
    STATE s_2 { TRANS { SYNC l; RESET x; GOTO s_3; } }
    STATE s_3 { TRANS { GUARD x >= 4; SYNC r; GOTO s_4; } }
    STATE s_4 { TRANS { SYNC l; RESET x; GOTO s_5; } }
    STATE s_5 { TRANS { GUARD x >= 4; SYNC r; GOTO s_6; } }
    STATE s_6 { TRANS { SYNC l; RESET x; GOTO s_7; } }
    STATE s_7 { TRANS { GUARD x >= 4; SYNC r; GOTO s_8; } }
    STATE s_8 { TRANS { SYNC l; RESET x; GOTO s_9; } }
    STATE s_9 { TRANS { GUARD x >= 4; SYNC r; GOTO s_10; } }
    STATE s_10 { TRANS { SYNC fin; GOTO s_10; } }
  }
}
MODULE ChainGroup
{
  INPUT
    fin:  SYNC;
  LOCAL
    s_0:  SYNC;
    s_1:  SYNC;
    s_2:  SYNC;
  INST proc1 FROM Chain WITH { fin AS fin; l AS s_0; r AS s_1; }
  INST proc2 FROM Chain WITH { fin AS fin; l AS s_1; r AS s_2; }
}
MODULE ROOT System
{
  LOCAL
    fin:  SYNC;
  INST group1 FROM ChainGroup WITH { fin AS fin; }
  INST group2 FROM ChainGroup WITH { fin AS fin; }
  INST group3 FROM ChainGroup WITH { fin AS fin; }
  INST group4 FROM ChainGroup WITH { fin AS fin; }
  INST group5 FROM ChainGroup WITH { fin AS fin; }
  INST group6 FROM ChainGroup WITH { fin AS fin; }
  INST group7 FROM ChainGroup WITH { fin AS fin; }
  INST group8 FROM ChainGroup WITH { fin AS fin; }
  INST group9 FROM ChainGroup WITH { fin AS fin; }
  INST group10 FROM ChainGroup WITH { fin AS fin; }
  INITIAL start;
  AUTOMATON RunningState
  {
    STATE start { TRANS { SYNC fin; GOTO fin; } }
    STATE fin { TRANS { SYNC fin; GOTO fin; } }
  }
}