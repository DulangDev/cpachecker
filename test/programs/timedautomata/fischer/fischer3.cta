// This file is part of CPAchecker,
// a tool for configurable software verification:
// https://cpachecker.sosy-lab.org
// 
// SPDX-FileCopyrightText: 2007-2020 Dirk Beyer <https://www.sosy-lab.org>
// 
// SPDX-License-Identifier: Apache-2.0

MODULE Process
{
  INPUT
    is_pid_0:       SYNC;
    is_pid_id:      SYNC;
    set_pid_id:     SYNC;
    set_pid_0:      SYNC;
    is_pid_not_id:  SYNC;
    a:              CONST;
    b:              CONST;
  LOCAL
    x:  CLOCK;
  INITIAL default;
  AUTOMATON Process
  {
    STATE default
    {
      TRANS
      {
        SYNC is_pid_0;
        RESET x;
        GOTO request;
      }
    }
    STATE request
    {
      INV x <= a;
      TRANS
      {
        SYNC set_pid_id;
        RESET x;
        GOTO wait;
      }
    }
    STATE wait
    {
      TRANS
      {
        GUARD x > b;
        SYNC is_pid_id;
        GOTO critical;
      }
      TRANS
      {
        GUARD x > b;
        SYNC is_pid_not_id;
        GOTO default;
      }
    }
    STATE critical(ERROR)
    {
      TRANS
      {
        SYNC set_pid_0;
        GOTO default;
      }
    }
  }
}
MODULE Variable
{
  INPUT
    is_0_p1:   SYNC;
    is_1:      SYNC;
    is_not_1:  SYNC;
    set_1:     SYNC;
    set_0_p1:  SYNC;
    is_0_p2:   SYNC;
    is_2:      SYNC;
    is_not_2:  SYNC;
    set_2:     SYNC;
    set_0_p2:  SYNC;
    is_0_p3:   SYNC;
    is_3:      SYNC;
    is_not_3:  SYNC;
    set_3:     SYNC;
    set_0_p3:  SYNC;
  INITIAL s_0;
  AUTOMATON Variable
  {
    STATE s_0
    {
      TRANS { SYNC is_0_p1; GOTO s_0; }
      TRANS { SYNC is_not_1; GOTO s_0; }
      TRANS { SYNC set_1; GOTO s_1; }
      TRANS { SYNC is_0_p2; GOTO s_0; }
      TRANS { SYNC is_not_2; GOTO s_0; }
      TRANS { SYNC set_2; GOTO s_2; }
      TRANS { SYNC is_0_p3; GOTO s_0; }
      TRANS { SYNC is_not_3; GOTO s_0; }
      TRANS { SYNC set_3; GOTO s_3; }
    }
    STATE s_1
    {
      TRANS { SYNC is_1; GOTO s_1; }
      TRANS { SYNC set_0_p1; GOTO s_0; }
      TRANS { SYNC is_not_2; GOTO s_1; }
      TRANS { SYNC set_2; GOTO s_2; }
      TRANS { SYNC set_0_p2; GOTO s_0; }
      TRANS { SYNC is_not_3; GOTO s_1; }
      TRANS { SYNC set_3; GOTO s_3; }
      TRANS { SYNC set_0_p3; GOTO s_0; }
    }
    STATE s_2
    {
      TRANS { SYNC is_2; GOTO s_2; }
      TRANS { SYNC is_not_1; GOTO s_2; }
      TRANS { SYNC set_1; GOTO s_1; }
      TRANS { SYNC set_0_p1; GOTO s_0; }
      TRANS { SYNC set_0_p2; GOTO s_0; }
      TRANS { SYNC is_not_3; GOTO s_2; }
      TRANS { SYNC set_3; GOTO s_3; }
      TRANS { SYNC set_0_p3; GOTO s_0; }
    }
    STATE s_3
    {
      TRANS { SYNC is_3; GOTO s_3; }
      TRANS { SYNC is_not_1; GOTO s_3; }
      TRANS { SYNC set_1; GOTO s_1; }
      TRANS { SYNC set_0_p1; GOTO s_0; }
      TRANS { SYNC is_not_2; GOTO s_3; }
      TRANS { SYNC set_2; GOTO s_2; }
      TRANS { SYNC set_0_p2; GOTO s_0; }
      TRANS { SYNC set_0_p3; GOTO s_0; }
    }
  }
}
MODULE ROOT System
{
  LOCAL
    is_0_p1:   SYNC;
    is_1:      SYNC;
    is_not_1:  SYNC;
    set_1:     SYNC;
    set_0_p1:  SYNC;
    is_0_p2:   SYNC;
    is_2:      SYNC;
    is_not_2:  SYNC;
    set_2:     SYNC;
    set_0_p2:  SYNC;
    is_0_p3:   SYNC;
    is_3:      SYNC;
    is_not_3:  SYNC;
    set_3:     SYNC;
    set_0_p3:  SYNC;
    a = 100:   CONST;
    b = 10:    CONST;
  INST variable FROM Variable WITH
  {
    is_0_p1  AS is_0_p1;
    is_1     AS is_1;
    is_not_1 AS is_not_1;
    set_1    AS set_1;
    set_0_p1 AS set_0_p1;
    is_0_p2  AS is_0_p2;
    is_2     AS is_2;
    is_not_2 AS is_not_2;
    set_2    AS set_2;
    set_0_p2 AS set_0_p2;
    is_0_p3  AS is_0_p3;
    is_3     AS is_3;
    is_not_3 AS is_not_3;
    set_3    AS set_3;
    set_0_p3 AS set_0_p3;
  }
  INST process_1 FROM Process WITH
  {
    is_pid_0      AS is_0_p1;
    set_pid_0     AS set_0_p1;
    is_pid_id     AS is_1;
    is_pid_not_id AS is_not_1;
    set_pid_id    AS set_1;
    a             AS a;
    b             AS b;
  }
  INST process_2 FROM Process WITH
  {
    is_pid_0      AS is_0_p2;
    set_pid_0     AS set_0_p2;
    is_pid_id     AS is_2;
    is_pid_not_id AS is_not_2;
    set_pid_id    AS set_2;
    a             AS a;
    b             AS b;
  }
  INST process_3 FROM Process WITH
  {
    is_pid_0      AS is_0_p3;
    set_pid_0     AS set_0_p3;
    is_pid_id     AS is_3;
    is_pid_not_id AS is_not_3;
    set_pid_id    AS set_3;
    a             AS a;
    b             AS b;
  }
}